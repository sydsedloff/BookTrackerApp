{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport * as Font from \"expo-font\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button, ButtonGroup, Input } from \"@rneui/base\";\nimport { NavigationContainer, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar starterData = [{\n  title: \"The Poppy War\",\n  author: \"R.F. Kuang\",\n  genre: \"Fantasy\"\n}, {\n  title: \"The Way of Kings\",\n  author: \"Brandon Sanderson\",\n  genre: \"Fantasy\"\n}, {\n  title: \"A Little Life\",\n  author: \"Hanya Yanigahara\",\n  genre: \"Fiction\"\n}, {\n  title: \"Empire of Silence\",\n  author: \"Christopher Ruocchio\",\n  genre: \"Sci-fi\"\n}];\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Books\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Collections\",\n        component: CollectionsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Books\",\n        component: BooksScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Book Info\",\n        component: BookInfoScreen\n      })]\n    })\n  });\n}\nfunction CollectionsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  return _jsx(View, {\n    style: [styles.container],\n    children: _jsx(Text, {\n      children: \"this is text in the colelctions screen\"\n    })\n  });\n}\nfunction BooksScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(View, {\n    style: [styles.container],\n    children: _jsx(Text, {\n      children: \"This is sample text in BooksScreen\"\n    })\n  });\n}\nfunction BookInfoScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  var scoreValue = route.params.score;\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsxs(Text, {\n      children: [\"You got \", scoreValue, \" out of \", questionSet.length, \" correct\"]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Question\", {\n          questionIndex: 0\n        });\n      },\n      children: \"Restart\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"50px\"\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\"\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: \"50px\"\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FontAwesome","Font","useState","useCallback","useEffect","Text","FlatList","Image","Button","ButtonGroup","Input","NavigationContainer","useRoute","createNativeStackNavigator","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Stack","starterData","title","author","genre","App","children","Navigator","initialRouteName","Screen","name","component","CollectionsScreen","BooksScreen","BookInfoScreen","_ref","navigation","route","style","styles","container","_ref2","_ref3","scoreValue","params","score","questionSet","length","onPress","navigate","questionIndex","create","flex","backgroundColor","alignItems","justifyContent","fontSize","image","aspectRatio","width","horizontal","flexDirection","padding","button"],"sources":["C:/Users/firet/Documents/book-tracker/BookTrackerApp/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, View } from \"react-native\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport * as Font from \"expo-font\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport { FlatList, Image } from \"react-native\";\nimport { Button, ButtonGroup, Input } from \"@rneui/base\";\nimport { NavigationContainer, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst Stack = createNativeStackNavigator();\n\nlet starterData = [\n  {\n    title: \"The Poppy War\",\n    author: \"R.F. Kuang\",\n    genre: \"Fantasy\",\n  },\n  {\n    title: \"The Way of Kings\",\n    author: \"Brandon Sanderson\",\n    genre: \"Fantasy\",\n  },\n  {\n    title: \"A Little Life\",\n    author: \"Hanya Yanigahara\",\n    genre: \"Fiction\",\n  },\n  {\n    title: \"Empire of Silence\",\n    author: \"Christopher Ruocchio\",\n    genre: \"Sci-fi\",\n  },\n];\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Books\">\n        <Stack.Screen name=\"Collections\" component={CollectionsScreen} />\n        <Stack.Screen name=\"Books\" component={BooksScreen} />\n        <Stack.Screen name=\"Book Info\" component={BookInfoScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction CollectionsScreen({ navigation }) {\n  const route = useRoute();\n\n  return (\n    <View style={[styles.container]}>\n      <Text>this is text in the colelctions screen</Text>\n    </View>\n  );\n}\n\nfunction BooksScreen({ navigation }) {\n  return (\n    <View style={[styles.container]}>\n      <Text>This is sample text in BooksScreen</Text>\n    </View>\n  );\n}\n\nfunction BookInfoScreen({ navigation }) {\n  const scoreValue = route.params.score;\n  //show how many questions correct\n\n  return (\n    <View style={[styles.container]}>\n      <Text>\n        You got {scoreValue} out of {questionSet.length} correct\n      </Text>\n      <Button\n        onPress={() => navigation.navigate(\"Question\", { questionIndex: 0 })}\n      >\n        Restart\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"50px\",\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: \"50px\",\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}