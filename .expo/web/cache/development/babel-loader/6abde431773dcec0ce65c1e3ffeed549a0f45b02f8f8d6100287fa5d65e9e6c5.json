{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState, useCallback, useEffect, useLayoutEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, ButtonGroup } from \"@rneui/base\";\nimport { NavigationContainer, useFocusEffect, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar favoriteBooks = [{\n  title: \"Babel\",\n  author: \"R.F. Kuang\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}, {\n  title: \"The Way of Kings\",\n  author: \"Brandon Sanderson\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}, {\n  title: \"A Little Life\",\n  author: \"Hanya Yanigahara\",\n  genre: \"Fiction\",\n  notes: \"\"\n}, {\n  title: \"Wisdom of Crowds\",\n  author: \"Joe Abercrombie\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}];\nvar excitedToReadBooks = [{\n  title: \"Empire of Silence\",\n  author: \"Christopher Ruocchio\",\n  genre: \"Sci-fi\",\n  notes: \"\"\n}, {\n  title: \"Jade City\",\n  author: \"Fonda Lee\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}, {\n  title: \"Yellowface\",\n  author: \"R.F Kuang\",\n  genre: \"Fiction\",\n  notes: \"\"\n}];\nvar worstBooks = [{\n  title: \"Emma\",\n  author: \"Jane Austen\",\n  genre: \"Classics\",\n  notes: \"\"\n}, {\n  title: \"Fight or Flight\",\n  author: \"Samantha Young\",\n  genre: \"Romance\",\n  notes: \"\"\n}, {\n  title: \"Hounded\",\n  author: \"Kevin Hearne\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}];\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"CollectionsScreen\",\n      children: [_jsx(Stack.Screen, {\n        name: \"CollectionsScreen\",\n        component: CollectionsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"BooksScreen\",\n        component: BooksScreen\n      }), _jsx(Stack.Screen, {\n        name: \"BookInfoScreen\",\n        component: BookInfoScreen\n      })]\n    })\n  });\n}\nvar collections = [{\n  title: \"Favorite Books\",\n  data: favoriteBooks\n}, {\n  title: \"Excited to Read\",\n  data: excitedToReadBooks\n}, {\n  title: \"Worst Books\",\n  data: worstBooks\n}];\nfunction CollectionsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(collections),\n    _useState2 = _slicedToArray(_useState, 2),\n    collectionsArray = _useState2[0],\n    setNewCollectionsArray = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newCollectionName = _useState4[0],\n    setNewCollectionName = _useState4[1];\n  var handlePress = function handlePress(collection) {\n    navigation.navigate(\"BooksScreen\", {\n      collection: collection\n    });\n  };\n  var addNewCollection = useCallback(function () {\n    if (newCollectionName) {\n      var newCollection = {\n        title: newCollectionName,\n        data: []\n      };\n      collections.push(newCollection);\n      setNewCollectionsArray([].concat(collections));\n      setNewCollectionName(\"\");\n    }\n  }, [newCollectionName]);\n  return _jsxs(View, {\n    children: [_jsx(FlatList, {\n      data: collections,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handlePress({\n              title: item.title,\n              data: item.data\n            });\n          },\n          children: _jsx(View, {\n            children: _jsx(Text, {\n              children: item.title\n            })\n          })\n        });\n      }\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(TextInput, {\n        value: newCollectionName,\n        onChangeText: setNewCollectionName\n      }), _jsx(Button, {\n        onPress: addNewCollection,\n        children: \"Add New Collection\"\n      })]\n    })]\n  });\n}\nfunction BooksScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    route = _ref3.route,\n    newBook = _ref3.newBook;\n  var collection = route.params.collection;\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    books = _useState6[0],\n    setVisibleBooks = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    title = _useState8[0],\n    setTitle = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    author = _useState10[0],\n    setAuthor = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    genre = _useState12[0],\n    setGenre = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    notes = _useState14[0],\n    setNotes = _useState14[1];\n  useFocusEffect(useCallback(function () {\n    switch (collection.title) {\n      case \"Favorite Books\":\n        setVisibleBooks(favoriteBooks);\n        break;\n      case \"Excited to Read\":\n        setVisibleBooks(excitedToReadBooks);\n        break;\n      case \"Worst Books\":\n        setVisibleBooks(worstBooks);\n        break;\n      default:\n        setVisibleBooks([]);\n        break;\n    }\n  }, [collection, newBook]));\n  function createBook(title, author, genre, notes) {\n    var newBook = {\n      title: title,\n      author: author,\n      genre: genre,\n      notes: notes\n    };\n    switch (collection.title) {\n      case \"Favorite Books\":\n        favoriteBooks.push(newBook);\n        setVisibleBooks([].concat(favoriteBooks));\n        break;\n      case \"Excited to Read\":\n        excitedToReadBooks.push(newBook);\n        setVisibleBooks([].concat(excitedToReadBooks));\n        break;\n      case \"Worst Books\":\n        worstBooks.push(newBook);\n        setVisibleBooks([].concat(worstBooks));\n        break;\n      default:\n        setVisibleBooks([]);\n        break;\n    }\n  }\n  function handlePress(book) {\n    navigation.navigate(\"BookInfoScreen\", {\n      book: book\n    });\n  }\n  return _jsxs(View, {\n    children: [_jsx(FlatList, {\n      data: books,\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handlePress(item);\n          },\n          children: _jsxs(View, {\n            children: [_jsx(Text, {\n              children: item.title\n            }), _jsxs(Text, {\n              children: [\"by \", item.author]\n            })]\n          })\n        });\n      }\n    }), _jsxs(View, {\n      children: [_jsxs(View, {\n        style: [styles.horizontal],\n        children: [_jsx(Text, {\n          children: \"Title:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Title\",\n          onChangeText: setTitle\n        })]\n      }), _jsxs(View, {\n        style: [styles.horizontal],\n        children: [_jsx(Text, {\n          children: \"Author:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Author\",\n          onChangeText: setAuthor\n        })]\n      }), _jsxs(View, {\n        style: [styles.horizontal],\n        children: [_jsx(Text, {\n          children: \"Genre:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Genre\",\n          onChangeText: setGenre\n        })]\n      }), _jsxs(View, {\n        style: [styles.horizontal],\n        children: [_jsx(Text, {\n          children: \"Other notes:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Personal notes about the book\",\n          onChangeText: setNotes\n        })]\n      })]\n    }), _jsx(Button, {\n      title: \"Create Book\",\n      onPress: function onPress() {\n        return createBook(title, author, genre, notes);\n      },\n      children: \"Create Book\"\n    })]\n  });\n}\nfunction BookInfoScreen(_ref5) {\n  var route = _ref5.route,\n    navigation = _ref5.navigation;\n  var book = route.params.book;\n  var collection = route.params.collecion;\n  var data = route.params.data;\n  var _useState15 = useState(book),\n    _useState16 = _slicedToArray(_useState15, 2),\n    updatedBook = _useState16[0],\n    setUpdatedBook = _useState16[1];\n  var handleSave = function handleSave() {\n    var newData = collection.data.map(function (item) {\n      return item.title === book.title ? updatedBook : item;\n    });\n    collection.data = newData;\n    navigation.navigate(\"BooksScreen\", {\n      collection: collection,\n      newBook: updatedBook\n    });\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Title:\"\n    }), _jsx(TextInput, {\n      value: updatedBook.title,\n      onChangeText: function onChangeText(text) {\n        return setUpdatedBook(_objectSpread(_objectSpread({}, updatedBook), {}, {\n          title: text\n        }));\n      }\n    }), _jsx(Text, {\n      children: \"Author:\"\n    }), _jsx(TextInput, {\n      value: updatedBook.author,\n      onChangeText: function onChangeText(text) {\n        return setUpdatedBook(_objectSpread(_objectSpread({}, updatedBook), {}, {\n          author: text\n        }));\n      }\n    }), _jsx(Text, {\n      children: \"Genre:\"\n    }), _jsx(TextInput, {\n      value: updatedBook.genre,\n      onChangeText: function onChangeText(text) {\n        return setUpdatedBook(_objectSpread(_objectSpread({}, updatedBook), {}, {\n          genre: text\n        }));\n      }\n    }), _jsx(Text, {\n      children: \"Notes:\"\n    }), _jsx(TextInput, {\n      value: updatedBook.notes,\n      onChangeText: function onChangeText(text) {\n        return setUpdatedBook(_objectSpread(_objectSpread({}, updatedBook), {}, {\n          notes: text\n        }));\n      }\n    }), _jsx(Button, {\n      onPress: handleSave,\n      children: \"Save\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 50\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\"\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: 50\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});","map":{"version":3,"names":["useState","useCallback","useEffect","useLayoutEffect","Text","FlatList","Image","TextInput","Button","ButtonGroup","NavigationContainer","useFocusEffect","useRoute","createNativeStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","favoriteBooks","title","author","genre","notes","excitedToReadBooks","worstBooks","App","children","Navigator","initialRouteName","Screen","name","component","CollectionsScreen","BooksScreen","BookInfoScreen","collections","data","_ref","navigation","_useState","_useState2","_slicedToArray","collectionsArray","setNewCollectionsArray","_useState3","_useState4","newCollectionName","setNewCollectionName","handlePress","collection","navigate","addNewCollection","newCollection","push","concat","View","renderItem","_ref2","item","TouchableOpacity","onPress","style","styles","horizontal","value","onChangeText","_ref3","route","newBook","params","_useState5","_useState6","books","setVisibleBooks","_useState7","_useState8","setTitle","_useState9","_useState10","setAuthor","_useState11","_useState12","setGenre","_useState13","_useState14","setNotes","createBook","book","_ref4","placeholder","_ref5","collecion","_useState15","_useState16","updatedBook","setUpdatedBook","handleSave","newData","map","text","_objectSpread","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","fontSize","image","aspectRatio","width","flexDirection","padding","button"],"sources":["C:/Users/firet/Documents/book-tracker/BookTrackerApp/App.js"],"sourcesContent":["import { StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport { useState, useCallback, useEffect, useLayoutEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport { FlatList, Image, TextInput } from \"react-native\";\nimport { Button, ButtonGroup } from \"@rneui/base\";\nimport {\n  NavigationContainer,\n  useFocusEffect,\n  useRoute,\n} from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nconst Stack = createNativeStackNavigator();\n\nlet favoriteBooks = [\n  {\n    title: \"Babel\",\n    author: \"R.F. Kuang\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n  {\n    title: \"The Way of Kings\",\n    author: \"Brandon Sanderson\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n  {\n    title: \"A Little Life\",\n    author: \"Hanya Yanigahara\",\n    genre: \"Fiction\",\n    notes: \"\",\n  },\n  {\n    title: \"Wisdom of Crowds\",\n    author: \"Joe Abercrombie\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n];\n\nconst excitedToReadBooks = [\n  {\n    title: \"Empire of Silence\",\n    author: \"Christopher Ruocchio\",\n    genre: \"Sci-fi\",\n    notes: \"\",\n  },\n  {\n    title: \"Jade City\",\n    author: \"Fonda Lee\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n  {\n    title: \"Yellowface\",\n    author: \"R.F Kuang\",\n    genre: \"Fiction\",\n    notes: \"\",\n  },\n];\n\nconst worstBooks = [\n  {\n    title: \"Emma\",\n    author: \"Jane Austen\",\n    genre: \"Classics\",\n    notes: \"\",\n  },\n  {\n    title: \"Fight or Flight\",\n    author: \"Samantha Young\",\n    genre: \"Romance\",\n    notes: \"\",\n  },\n  {\n    title: \"Hounded\",\n    author: \"Kevin Hearne\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n];\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"CollectionsScreen\">\n        <Stack.Screen name=\"CollectionsScreen\" component={CollectionsScreen} />\n        <Stack.Screen name=\"BooksScreen\" component={BooksScreen} />\n        <Stack.Screen name=\"BookInfoScreen\" component={BookInfoScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst collections = [\n  {\n    title: \"Favorite Books\",\n    data: favoriteBooks,\n  },\n  {\n    title: \"Excited to Read\",\n    data: excitedToReadBooks,\n  },\n  {\n    title: \"Worst Books\",\n    data: worstBooks,\n  },\n];\n\n//show all collections\nfunction CollectionsScreen({ navigation }) {\n  const [collectionsArray, setNewCollectionsArray] = useState(collections);\n  const [newCollectionName, setNewCollectionName] = useState(\"\");\n\n  const handlePress = (collection) => {\n    navigation.navigate(\"BooksScreen\", { collection });\n  };\n\n  const addNewCollection = useCallback(() => {\n    if (newCollectionName) {\n      const newCollection = {\n        title: newCollectionName,\n        data: [],\n      };\n      collections.push(newCollection); // Add the new collection to the collections array\n      setNewCollectionsArray([...collections]); // Update the state variable with the new array\n      setNewCollectionName(\"\");\n    }\n  }, [newCollectionName]);\n\n  return (\n    <View>\n      <FlatList\n        data={collections}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            onPress={() => handlePress({ title: item.title, data: item.data })}\n          >\n            <View>\n              <Text>{item.title}</Text>\n            </View>\n          </TouchableOpacity>\n        )}\n      />\n      <View style={[styles.horizontal]}>\n        <TextInput\n          value={newCollectionName}\n          onChangeText={setNewCollectionName}\n        />\n        <Button onPress={addNewCollection}>Add New Collection</Button>\n      </View>\n    </View>\n  );\n}\n\n//books in each collection\nfunction BooksScreen({ navigation, route, newBook }) {\n  const collection = route.params.collection;\n  const [books, setVisibleBooks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n\n  useFocusEffect(\n    useCallback(() => {\n      // show books based on collection\n      switch (collection.title) {\n        case \"Favorite Books\":\n          setVisibleBooks(favoriteBooks);\n          break;\n        case \"Excited to Read\":\n          setVisibleBooks(excitedToReadBooks);\n          break;\n        case \"Worst Books\":\n          setVisibleBooks(worstBooks);\n          break;\n        default:\n          setVisibleBooks([]);\n          break;\n      }\n    }, [collection, newBook])\n  );\n\n  function createBook(title, author, genre, notes) {\n    const newBook = { title, author, genre, notes };\n    switch (collection.title) {\n      case \"Favorite Books\":\n        favoriteBooks.push(newBook);\n        setVisibleBooks([...favoriteBooks]);\n        break;\n      case \"Excited to Read\":\n        excitedToReadBooks.push(newBook);\n        setVisibleBooks([...excitedToReadBooks]);\n        break;\n      case \"Worst Books\":\n        worstBooks.push(newBook);\n        setVisibleBooks([...worstBooks]);\n        break;\n      default:\n        setVisibleBooks([]);\n        break;\n    }\n  }\n\n  function handlePress(book) {\n    navigation.navigate(\"BookInfoScreen\", { book });\n  }\n  return (\n    <View>\n      <FlatList\n        data={books}\n        renderItem={({ item }) => (\n          <TouchableOpacity onPress={() => handlePress(item)}>\n            <View>\n              <Text>{item.title}</Text>\n              <Text>by {item.author}</Text>\n            </View>\n          </TouchableOpacity>\n        )}\n      />\n      <View>\n        <View style={[styles.horizontal]}>\n          <Text>Title:</Text>\n          <TextInput placeholder=\"Title\" onChangeText={setTitle}></TextInput>\n        </View>\n        <View style={[styles.horizontal]}>\n          <Text>Author:</Text>\n          <TextInput placeholder=\"Author\" onChangeText={setAuthor}></TextInput>\n        </View>\n        <View style={[styles.horizontal]}>\n          <Text>Genre:</Text>\n          <TextInput placeholder=\"Genre\" onChangeText={setGenre}></TextInput>\n        </View>\n        <View style={[styles.horizontal]}>\n          <Text>Other notes:</Text>\n          <TextInput\n            placeholder=\"Personal notes about the book\"\n            onChangeText={setNotes}\n          ></TextInput>\n        </View>\n      </View>\n      <Button\n        title=\"Create Book\"\n        onPress={() => createBook(title, author, genre, notes)}\n      >\n        Create Book\n      </Button>\n    </View>\n  );\n}\n\nfunction BookInfoScreen({ route, navigation }) {\n  const book = route.params.book;\n  const collection = route.params.collecion;\n  const data = route.params.data;\n\n  const [updatedBook, setUpdatedBook] = useState(book);\n\n  const handleSave = () => {\n    const newData = collection.data.map((item) =>\n      item.title === book.title ? updatedBook : item\n    );\n    collection.data = newData;\n    navigation.navigate(\"BooksScreen\", { collection, newBook: updatedBook });\n  };\n\n  return (\n    <View>\n      <Text>Title:</Text>\n      <TextInput\n        value={updatedBook.title}\n        onChangeText={(text) => setUpdatedBook({ ...updatedBook, title: text })}\n      />\n\n      <Text>Author:</Text>\n      <TextInput\n        value={updatedBook.author}\n        onChangeText={(text) =>\n          setUpdatedBook({ ...updatedBook, author: text })\n        }\n      />\n\n      <Text>Genre:</Text>\n      <TextInput\n        value={updatedBook.genre}\n        onChangeText={(text) => setUpdatedBook({ ...updatedBook, genre: text })}\n      />\n\n      <Text>Notes:</Text>\n      <TextInput\n        value={updatedBook.notes}\n        onChangeText={(text) => setUpdatedBook({ ...updatedBook, notes: text })}\n      />\n\n      <Button onPress={handleSave}>Save</Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 50,\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: 50,\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}