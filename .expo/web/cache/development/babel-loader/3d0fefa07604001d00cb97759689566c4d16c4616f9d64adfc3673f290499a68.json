{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Font from \"expo-font\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, ButtonGroup } from \"@rneui/base\";\nimport { NavigationContainer, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar favoriteBooks = [{\n  title: \"Babel\",\n  author: \"R.F. Kuang\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}, {\n  title: \"The Way of Kings\",\n  author: \"Brandon Sanderson\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}, {\n  title: \"A Little Life\",\n  author: \"Hanya Yanigahara\",\n  genre: \"Fiction\",\n  notes: \"\"\n}, {\n  title: \"Wisdom of Crowds\",\n  author: \"Joe Abercrombie\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}];\nvar excitedToReadBooks = [{\n  title: \"Empire of Silence\",\n  author: \"Christopher Ruocchio\",\n  genre: \"Sci-fi\",\n  notes: \"\"\n}, {\n  title: \"Jade City\",\n  author: \"Fonda Lee\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}, {\n  title: \"Yellowface\",\n  author: \"R.F Kuang\",\n  genre: \"Fiction\",\n  notes: \"\"\n}];\nvar worstBooks = [{\n  title: \"Emma\",\n  author: \"Jane Austen\",\n  genre: \"Classics\",\n  notes: \"\"\n}, {\n  title: \"Fight or Flight\",\n  author: \"Samantha Young\",\n  genre: \"Romance\",\n  notes: \"\"\n}, {\n  title: \"Hounded\",\n  author: \"Kevin Hearne\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}];\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"CollectionsScreen\",\n      children: [_jsx(Stack.Screen, {\n        name: \"CollectionsScreen\",\n        component: CollectionsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"BooksScreen\",\n        component: BooksScreen\n      }), _jsx(Stack.Screen, {\n        name: \"BookInfoScreen\",\n        component: BookInfoScreen\n      })]\n    })\n  });\n}\nvar collections = [{\n  title: \"Favorite Books\",\n  data: favoriteBooks\n}, {\n  title: \"Excited to Read\",\n  data: excitedToReadBooks\n}, {\n  title: \"Worst Books\",\n  data: worstBooks\n}];\nfunction CollectionsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var handlePress = function handlePress(collection) {\n    navigation.navigate(\"BooksScreen\", collection);\n  };\n  return _jsxs(View, {\n    children: [_jsx(FlatList, {\n      data: collections,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handlePress(item);\n          },\n          children: _jsx(View, {\n            children: _jsx(Text, {\n              children: item.title\n            })\n          })\n        });\n      }\n    }), _jsx(Button, {\n      children: \"Add New Collection\"\n    })]\n  });\n}\nfunction BooksScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    route = _ref3.route;\n  var collection = route.params;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    books = _useState2[0],\n    setVisibleBooks = _useState2[1];\n  useEffect(function () {\n    switch (collection.title) {\n      case \"Favorite Books\":\n        setVisibleBooks(favoriteBooks);\n        break;\n      case \"Excited to Read\":\n        setVisibleBooks(excitedToReadBooks);\n        break;\n      case \"Worst Books\":\n        setVisibleBooks(worstBooks);\n        break;\n      default:\n        setVisibleBooks([]);\n        break;\n    }\n  }, [collection]);\n  function handlePress(book) {\n    navigation.navigate(\"BookInfoScreen\", {\n      book: book\n    });\n  }\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: books,\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handlePress(item);\n          },\n          children: _jsxs(View, {\n            children: [_jsx(Text, {\n              children: item.title\n            }), _jsxs(Text, {\n              children: [\"by \", item.author]\n            })]\n          })\n        });\n      }\n    })\n  });\n}\nfunction BookInfoScreen(_ref5) {\n  var navigation = _ref5.navigation,\n    route = _ref5.route;\n  var book = route.params.book;\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    updatedBooks = _useState4[0],\n    setUpdatedBooks = _useState4[1];\n  var _useState5 = useState(book.title),\n    _useState6 = _slicedToArray(_useState5, 2),\n    title = _useState6[0],\n    setTitle = _useState6[1];\n  var _useState7 = useState(book.author),\n    _useState8 = _slicedToArray(_useState7, 2),\n    author = _useState8[0],\n    setAuthor = _useState8[1];\n  var _useState9 = useState(book.genre),\n    _useState10 = _slicedToArray(_useState9, 2),\n    genre = _useState10[0],\n    setGenre = _useState10[1];\n  var _useState11 = useState(book.notes),\n    _useState12 = _slicedToArray(_useState11, 2),\n    notes = _useState12[0],\n    setNotes = _useState12[1];\n  function saveChanges() {\n    var newBook = {\n      title: title,\n      author: author,\n      genre: genre,\n      notes: notes\n    };\n    var updatedBooksCopy = _toConsumableArray(updatedBooks);\n    var bookIndex = updatedBooksCopy.findIndex(function (b) {\n      return b.title === book.title && b.author === book.author;\n    });\n    if (bookIndex >= 0) {\n      updatedBooksCopy[bookIndex] = newBook;\n    } else {\n      updatedBooksCopy.push(newBook);\n    }\n    setUpdatedBooks(updatedBooksCopy);\n    console.log(\"saved\");\n    navigation.goBack();\n  }\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsxs(Text, {\n      children: [\"Info for \", book.title]\n    }), _jsxs(View, {\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Title:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: setTitle\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Author:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Author\",\n          value: author,\n          onChangeText: setAuthor\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Genre:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Genre\",\n          value: genre,\n          onChangeText: setGenre\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Other notes:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Personal notes about the book\",\n          value: notes,\n          onChangeText: setNotes\n        })]\n      })]\n    }), _jsx(Button, {\n      title: \"Save Changes\",\n      onPress: saveChanges,\n      children: \"Save Changes\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 50\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\"\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: 50\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});","map":{"version":3,"names":["Font","useState","useCallback","useEffect","Text","FlatList","Image","TextInput","Button","ButtonGroup","NavigationContainer","useRoute","createNativeStackNavigator","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Stack","favoriteBooks","title","author","genre","notes","excitedToReadBooks","worstBooks","App","children","Navigator","initialRouteName","Screen","name","component","CollectionsScreen","BooksScreen","BookInfoScreen","collections","data","_ref","navigation","handlePress","collection","navigate","View","renderItem","_ref2","item","TouchableOpacity","onPress","_ref3","route","params","_useState","_useState2","_slicedToArray","books","setVisibleBooks","book","_ref4","_ref5","_useState3","_useState4","updatedBooks","setUpdatedBooks","_useState5","_useState6","setTitle","_useState7","_useState8","setAuthor","_useState9","_useState10","setGenre","_useState11","_useState12","setNotes","saveChanges","newBook","updatedBooksCopy","_toConsumableArray","bookIndex","findIndex","b","push","console","log","goBack","style","styles","container","placeholder","value","onChangeText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","image","aspectRatio","width","horizontal","flexDirection","padding","button"],"sources":["C:/Users/firet/Documents/book-tracker/BookTrackerApp/App.js"],"sourcesContent":["import { StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport * as Font from \"expo-font\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport { FlatList, Image, TextInput } from \"react-native\";\nimport { Button, ButtonGroup } from \"@rneui/base\";\nimport { NavigationContainer, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst Stack = createNativeStackNavigator();\n\nlet favoriteBooks = [\n  {\n    title: \"Babel\",\n    author: \"R.F. Kuang\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n  {\n    title: \"The Way of Kings\",\n    author: \"Brandon Sanderson\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n  {\n    title: \"A Little Life\",\n    author: \"Hanya Yanigahara\",\n    genre: \"Fiction\",\n    notes: \"\",\n  },\n  {\n    title: \"Wisdom of Crowds\",\n    author: \"Joe Abercrombie\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n];\n\nconst excitedToReadBooks = [\n  {\n    title: \"Empire of Silence\",\n    author: \"Christopher Ruocchio\",\n    genre: \"Sci-fi\",\n    notes: \"\",\n  },\n  {\n    title: \"Jade City\",\n    author: \"Fonda Lee\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n  {\n    title: \"Yellowface\",\n    author: \"R.F Kuang\",\n    genre: \"Fiction\",\n    notes: \"\",\n  },\n];\n\nconst worstBooks = [\n  {\n    title: \"Emma\",\n    author: \"Jane Austen\",\n    genre: \"Classics\",\n    notes: \"\",\n  },\n  {\n    title: \"Fight or Flight\",\n    author: \"Samantha Young\",\n    genre: \"Romance\",\n    notes: \"\",\n  },\n  {\n    title: \"Hounded\",\n    author: \"Kevin Hearne\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n];\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"CollectionsScreen\">\n        <Stack.Screen name=\"CollectionsScreen\" component={CollectionsScreen} />\n        <Stack.Screen name=\"BooksScreen\" component={BooksScreen} />\n        <Stack.Screen name=\"BookInfoScreen\" component={BookInfoScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst collections = [\n  {\n    title: \"Favorite Books\",\n    data: favoriteBooks,\n  },\n  {\n    title: \"Excited to Read\",\n    data: excitedToReadBooks,\n  },\n  {\n    title: \"Worst Books\",\n    data: worstBooks,\n  },\n];\n\n//show all collections\nfunction CollectionsScreen({ navigation }) {\n  const handlePress = (collection) => {\n    navigation.navigate(\"BooksScreen\", collection);\n  };\n  return (\n    <View>\n      <FlatList\n        data={collections}\n        renderItem={({ item }) => (\n          <TouchableOpacity onPress={() => handlePress(item)}>\n            <View>\n              <Text>{item.title}</Text>\n            </View>\n          </TouchableOpacity>\n        )}\n      />\n      <Button>Add New Collection</Button>\n    </View>\n  );\n}\n\n//books in each collection\nfunction BooksScreen({ navigation, route }) {\n  const collection = route.params;\n  const [books, setVisibleBooks] = useState([]);\n  useEffect(() => {\n    // show books based on collection\n    switch (collection.title) {\n      case \"Favorite Books\":\n        setVisibleBooks(favoriteBooks);\n        break;\n      case \"Excited to Read\":\n        setVisibleBooks(excitedToReadBooks);\n        break;\n      case \"Worst Books\":\n        setVisibleBooks(worstBooks);\n        break;\n      default:\n        setVisibleBooks([]);\n        break;\n    }\n  }, [collection]);\n  function handlePress(book) {\n    navigation.navigate(\"BookInfoScreen\", { book });\n  }\n  return (\n    <View>\n      <FlatList\n        data={books}\n        renderItem={({ item }) => (\n          <TouchableOpacity onPress={() => handlePress(item)}>\n            <View>\n              <Text>{item.title}</Text>\n              <Text>by {item.author}</Text>\n            </View>\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n}\n\nfunction BookInfoScreen({ navigation, route }) {\n  const book = route.params.book;\n  const [updatedBooks, setUpdatedBooks] = useState([]);\n  const [title, setTitle] = useState(book.title);\n  const [author, setAuthor] = useState(book.author);\n  const [genre, setGenre] = useState(book.genre);\n  const [notes, setNotes] = useState(book.notes);\n\n  function saveChanges() {\n    const newBook = { title, author, genre, notes };\n    const updatedBooksCopy = [...updatedBooks];\n    const bookIndex = updatedBooksCopy.findIndex(\n      (b) => b.title === book.title && b.author === book.author\n    );\n    if (bookIndex >= 0) {\n      updatedBooksCopy[bookIndex] = newBook;\n    } else {\n      updatedBooksCopy.push(newBook);\n    }\n    setUpdatedBooks(updatedBooksCopy);\n    console.log(\"saved\");\n    navigation.goBack();\n  }\n\n  return (\n    <View style={[styles.container]}>\n      {/* insert text with title of the book here */}\n      <Text>Info for {book.title}</Text>\n      <View>\n        <View>\n          <Text>Title:</Text>\n          <TextInput\n            placeholder=\"Title\"\n            value={title}\n            onChangeText={setTitle}\n          ></TextInput>\n        </View>\n        <View>\n          <Text>Author:</Text>\n          <TextInput\n            placeholder=\"Author\"\n            value={author}\n            onChangeText={setAuthor}\n          ></TextInput>\n        </View>\n        <View>\n          <Text>Genre:</Text>\n          <TextInput\n            placeholder=\"Genre\"\n            value={genre}\n            onChangeText={setGenre}\n          ></TextInput>\n        </View>\n        <View>\n          <Text>Other notes:</Text>\n          <TextInput\n            placeholder=\"Personal notes about the book\"\n            value={notes}\n            onChangeText={setNotes}\n          ></TextInput>\n        </View>\n      </View>\n      <Button title=\"Save Changes\" onPress={saveChanges}>\n        Save Changes\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 50,\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: 50,\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}