{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Font from \"expo-font\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, ButtonGroup } from \"@rneui/base\";\nimport { NavigationContainer, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar favoriteBooks = [{\n  title: \"Babel\",\n  author: \"R.F. Kuang\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}, {\n  title: \"The Way of Kings\",\n  author: \"Brandon Sanderson\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}, {\n  title: \"A Little Life\",\n  author: \"Hanya Yanigahara\",\n  genre: \"Fiction\",\n  notes: \"\"\n}, {\n  title: \"Wisdom of Crowds\",\n  author: \"Joe Abercrombie\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}];\nvar excitedToReadBooks = [{\n  title: \"Empire of Silence\",\n  author: \"Christopher Ruocchio\",\n  genre: \"Sci-fi\",\n  notes: \"\"\n}, {\n  title: \"Jade City\",\n  author: \"Fonda Lee\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}, {\n  title: \"Yellowface\",\n  author: \"R.F Kuang\",\n  genre: \"Fiction\",\n  notes: \"\"\n}];\nvar worstBooks = [{\n  title: \"Emma\",\n  author: \"Jane Austen\",\n  genre: \"Classics\",\n  notes: \"\"\n}, {\n  title: \"Fight or Flight\",\n  author: \"Samantha Young\",\n  genre: \"Romance\",\n  notes: \"\"\n}, {\n  title: \"Hounded\",\n  author: \"Kevin Hearne\",\n  genre: \"Fantasy\",\n  notes: \"\"\n}];\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"CollectionsScreen\",\n      children: [_jsx(Stack.Screen, {\n        name: \"CollectionsScreen\",\n        component: CollectionsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"BooksScreen\",\n        component: BooksScreen\n      }), _jsx(Stack.Screen, {\n        name: \"BookInfoScreen\",\n        component: BookInfoScreen\n      })]\n    })\n  });\n}\nvar collections = [{\n  title: \"Favorite Books\",\n  data: favoriteBooks\n}, {\n  title: \"Excited to Read\",\n  data: excitedToReadBooks\n}, {\n  title: \"Worst Books\",\n  data: worstBooks\n}];\nfunction CollectionsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(collections),\n    _useState2 = _slicedToArray(_useState, 2),\n    collectionsArray = _useState2[0],\n    setNewCollectionsArray = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newCollectionName = _useState4[0],\n    setNewCollectionName = _useState4[1];\n  var handlePress = function handlePress(collection) {\n    navigation.navigate(\"BooksScreen\", {\n      collection: collection\n    });\n  };\n  var addNewCollection = useCallback(function () {\n    if (newCollectionName) {\n      var newCollection = {\n        title: newCollectionName,\n        data: []\n      };\n      collections.push(newCollection);\n      setNewCollectionsArray([].concat(collections));\n      setNewCollectionName(\"\");\n    }\n  }, [newCollectionName]);\n  return _jsxs(View, {\n    children: [_jsx(FlatList, {\n      data: collections,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handlePress(item);\n          },\n          children: _jsx(View, {\n            children: _jsx(Text, {\n              children: item.title\n            })\n          })\n        });\n      }\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(TextInput, {\n        value: newCollectionName,\n        onChangeText: setNewCollectionName\n      }), _jsx(Button, {\n        onPress: addNewCollection,\n        children: \"Add New Collection\"\n      })]\n    })]\n  });\n}\nfunction BooksScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    route = _ref3.route;\n  var data = route.params.data;\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    books = _useState6[0],\n    setBooks = _useState6[1];\n  useEffect(function () {\n    setBooks(data);\n  }, [data]);\n  function handlePress(book) {\n    navigation.navigate(\"BookInfoScreen\", {\n      book: book\n    });\n  }\n  function createBook(collection, title, author, genre, notes) {\n    var newBook = {\n      title: title,\n      author: author,\n      genre: genre,\n      notes: notes\n    };\n    var collectionIndex = collections.findIndex(function (c) {\n      return c.title === collection.title;\n    });\n    if (collectionIndex >= 0) {\n      collections[collectionIndex].data.push(newBook);\n      setBooks(_toConsumableArray(collections[collectionIndex].data));\n      AsyncStorage.setItem(collection.title, JSON.stringify(collections[collectionIndex].data));\n    }\n  }\n  var renderItem = function renderItem(_ref4) {\n    var item = _ref4.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return handlePress(item);\n      },\n      children: _jsxs(View, {\n        style: styles.book,\n        children: [_jsx(Image, {\n          source: {\n            uri: item.image_url\n          },\n          style: styles.image\n        }), _jsxs(View, {\n          style: styles.bookInfo,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: item.title\n          }), _jsx(Text, {\n            style: styles.author,\n            children: item.author\n          }), _jsx(Text, {\n            style: styles.genre,\n            children: item.genre\n          })]\n        })]\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: books,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.title;\n      }\n    }), _jsxs(View, {\n      style: styles.addBook,\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Title\",\n        value: title,\n        onChangeText: setTitle\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Author\",\n        value: author,\n        onChangeText: setAuthor\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Genre\",\n        value: genre,\n        onChangeText: setGenre\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Notes\",\n        value: notes,\n        onChangeText: setNotes\n      }), _jsx(Button, {\n        style: styles.addButton,\n        onPress: function onPress() {\n          return createBook(collection, title, author, genre, notes);\n        },\n        children: \"Add Book\"\n      })]\n    })]\n  });\n}\nfunction BookInfoScreen(_ref5) {\n  var navigation = _ref5.navigation,\n    route = _ref5.route;\n  var book = route.params.book;\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    updatedBooks = _useState8[0],\n    setUpdatedBooks = _useState8[1];\n  var _useState9 = useState(book.title),\n    _useState10 = _slicedToArray(_useState9, 2),\n    title = _useState10[0],\n    setTitle = _useState10[1];\n  var _useState11 = useState(book.author),\n    _useState12 = _slicedToArray(_useState11, 2),\n    author = _useState12[0],\n    setAuthor = _useState12[1];\n  var _useState13 = useState(book.genre),\n    _useState14 = _slicedToArray(_useState13, 2),\n    genre = _useState14[0],\n    setGenre = _useState14[1];\n  var _useState15 = useState(book.notes),\n    _useState16 = _slicedToArray(_useState15, 2),\n    notes = _useState16[0],\n    setNotes = _useState16[1];\n  function saveChanges() {\n    var newBook = {\n      title: title,\n      author: author,\n      genre: genre,\n      notes: notes\n    };\n    var updatedBooksCopy = _toConsumableArray(updatedBooks);\n    var bookIndex = updatedBooksCopy.findIndex(function (b) {\n      return b.title === book.title && b.author === book.author;\n    });\n    if (bookIndex >= 0) {\n      updatedBooksCopy[bookIndex] = newBook;\n    } else {\n      updatedBooksCopy.push(newBook);\n    }\n    setUpdatedBooks(updatedBooksCopy);\n    console.log(\"saved\");\n    navigation.goBack();\n  }\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsxs(Text, {\n      children: [\"Info for \", book.title]\n    }), _jsxs(View, {\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Title:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Title\",\n          value: title,\n          onChangeText: setTitle\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Author:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Author\",\n          value: author,\n          onChangeText: setAuthor\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Genre:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Genre\",\n          value: genre,\n          onChangeText: setGenre\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Other notes:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Personal notes about the book\",\n          value: notes,\n          onChangeText: setNotes\n        })]\n      })]\n    }), _jsx(Button, {\n      title: \"Save Changes\",\n      onPress: saveChanges,\n      children: \"Save Changes\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 50\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\"\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: 50\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});","map":{"version":3,"names":["Font","useState","useCallback","useEffect","Text","FlatList","Image","TextInput","Button","ButtonGroup","NavigationContainer","useRoute","createNativeStackNavigator","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Stack","favoriteBooks","title","author","genre","notes","excitedToReadBooks","worstBooks","App","children","Navigator","initialRouteName","Screen","name","component","CollectionsScreen","BooksScreen","BookInfoScreen","collections","data","_ref","navigation","_useState","_useState2","_slicedToArray","collectionsArray","setNewCollectionsArray","_useState3","_useState4","newCollectionName","setNewCollectionName","handlePress","collection","navigate","addNewCollection","newCollection","push","concat","View","renderItem","_ref2","item","TouchableOpacity","onPress","style","styles","horizontal","value","onChangeText","_ref3","route","params","_useState5","_useState6","books","setBooks","book","createBook","newBook","collectionIndex","findIndex","c","_toConsumableArray","setItem","JSON","stringify","_ref4","source","uri","image_url","image","bookInfo","container","keyExtractor","addBook","textInput","placeholder","setTitle","setAuthor","setGenre","setNotes","addButton","_ref5","_useState7","_useState8","updatedBooks","setUpdatedBooks","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","saveChanges","updatedBooksCopy","bookIndex","b","console","log","goBack","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","aspectRatio","width","flexDirection","padding","button"],"sources":["C:/Users/firet/Documents/book-tracker/BookTrackerApp/App.js"],"sourcesContent":["import { StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport * as Font from \"expo-font\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport { FlatList, Image, TextInput } from \"react-native\";\nimport { Button, ButtonGroup } from \"@rneui/base\";\nimport { NavigationContainer, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst Stack = createNativeStackNavigator();\n\nlet favoriteBooks = [\n  {\n    title: \"Babel\",\n    author: \"R.F. Kuang\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n  {\n    title: \"The Way of Kings\",\n    author: \"Brandon Sanderson\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n  {\n    title: \"A Little Life\",\n    author: \"Hanya Yanigahara\",\n    genre: \"Fiction\",\n    notes: \"\",\n  },\n  {\n    title: \"Wisdom of Crowds\",\n    author: \"Joe Abercrombie\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n];\n\nconst excitedToReadBooks = [\n  {\n    title: \"Empire of Silence\",\n    author: \"Christopher Ruocchio\",\n    genre: \"Sci-fi\",\n    notes: \"\",\n  },\n  {\n    title: \"Jade City\",\n    author: \"Fonda Lee\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n  {\n    title: \"Yellowface\",\n    author: \"R.F Kuang\",\n    genre: \"Fiction\",\n    notes: \"\",\n  },\n];\n\nconst worstBooks = [\n  {\n    title: \"Emma\",\n    author: \"Jane Austen\",\n    genre: \"Classics\",\n    notes: \"\",\n  },\n  {\n    title: \"Fight or Flight\",\n    author: \"Samantha Young\",\n    genre: \"Romance\",\n    notes: \"\",\n  },\n  {\n    title: \"Hounded\",\n    author: \"Kevin Hearne\",\n    genre: \"Fantasy\",\n    notes: \"\",\n  },\n];\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"CollectionsScreen\">\n        <Stack.Screen name=\"CollectionsScreen\" component={CollectionsScreen} />\n        <Stack.Screen name=\"BooksScreen\" component={BooksScreen} />\n        <Stack.Screen name=\"BookInfoScreen\" component={BookInfoScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst collections = [\n  {\n    title: \"Favorite Books\",\n    data: favoriteBooks,\n  },\n  {\n    title: \"Excited to Read\",\n    data: excitedToReadBooks,\n  },\n  {\n    title: \"Worst Books\",\n    data: worstBooks,\n  },\n];\n\n//show all collections\nfunction CollectionsScreen({ navigation }) {\n  const [collectionsArray, setNewCollectionsArray] = useState(collections);\n  const [newCollectionName, setNewCollectionName] = useState(\"\");\n\n  const handlePress = (collection) => {\n    navigation.navigate(\"BooksScreen\", { collection });\n  };\n\n  const addNewCollection = useCallback(() => {\n    if (newCollectionName) {\n      const newCollection = {\n        title: newCollectionName,\n        data: [],\n      };\n      collections.push(newCollection); // Add the new collection to the collections array\n      setNewCollectionsArray([...collections]); // Update the state variable with the new array\n      setNewCollectionName(\"\");\n    }\n  }, [newCollectionName]);\n\n  return (\n    <View>\n      <FlatList\n        data={collections}\n        renderItem={({ item }) => (\n          <TouchableOpacity onPress={() => handlePress(item)}>\n            <View>\n              <Text>{item.title}</Text>\n            </View>\n          </TouchableOpacity>\n        )}\n      />\n      <View style={[styles.horizontal]}>\n        <TextInput\n          value={newCollectionName}\n          onChangeText={setNewCollectionName}\n        />\n        <Button onPress={addNewCollection}>Add New Collection</Button>\n      </View>\n    </View>\n  );\n}\n\n//books in each collection\nfunction BooksScreen({ navigation, route }) {\n  const { data } = route.params;\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    // show books based on collection\n    setBooks(data);\n  }, [data]);\n\n  function handlePress(book) {\n    navigation.navigate(\"BookInfoScreen\", { book });\n  }\n\n  function createBook(collection, title, author, genre, notes) {\n    const newBook = {\n      title: title,\n      author: author,\n      genre: genre,\n      notes: notes,\n    };\n    // find the collection with the same title\n    const collectionIndex = collections.findIndex(\n      (c) => c.title === collection.title\n    );\n    if (collectionIndex >= 0) {\n      collections[collectionIndex].data.push(newBook); // add the new book to the collection\n      setBooks([...collections[collectionIndex].data]); // update the books state with the new array\n      AsyncStorage.setItem(\n        collection.title,\n        JSON.stringify(collections[collectionIndex].data)\n      ); // save the updated collection to AsyncStorage\n    }\n  }\n\n  const renderItem = ({ item }) => (\n    <TouchableOpacity onPress={() => handlePress(item)}>\n      <View style={styles.book}>\n        <Image source={{ uri: item.image_url }} style={styles.image} />\n        <View style={styles.bookInfo}>\n          <Text style={styles.title}>{item.title}</Text>\n          <Text style={styles.author}>{item.author}</Text>\n          <Text style={styles.genre}>{item.genre}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={books}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.title}\n      />\n      <View style={styles.addBook}>\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Title\"\n          value={title}\n          onChangeText={setTitle}\n        />\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Author\"\n          value={author}\n          onChangeText={setAuthor}\n        />\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Genre\"\n          value={genre}\n          onChangeText={setGenre}\n        />\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Notes\"\n          value={notes}\n          onChangeText={setNotes}\n        />\n        <Button\n          style={styles.addButton}\n          onPress={() => createBook(collection, title, author, genre, notes)}\n        >\n          Add Book\n        </Button>\n      </View>\n    </View>\n  );\n}\n\nfunction BookInfoScreen({ navigation, route }) {\n  const book = route.params.book;\n  const [updatedBooks, setUpdatedBooks] = useState([]);\n  const [title, setTitle] = useState(book.title);\n  const [author, setAuthor] = useState(book.author);\n  const [genre, setGenre] = useState(book.genre);\n  const [notes, setNotes] = useState(book.notes);\n\n  function saveChanges() {\n    const newBook = { title, author, genre, notes };\n    const updatedBooksCopy = [...updatedBooks];\n    const bookIndex = updatedBooksCopy.findIndex(\n      (b) => b.title === book.title && b.author === book.author\n    );\n    if (bookIndex >= 0) {\n      updatedBooksCopy[bookIndex] = newBook;\n    } else {\n      updatedBooksCopy.push(newBook);\n    }\n    setUpdatedBooks(updatedBooksCopy);\n    console.log(\"saved\");\n    navigation.goBack();\n  }\n\n  return (\n    <View style={[styles.container]}>\n      {/* insert text with title of the book here */}\n      <Text>Info for {book.title}</Text>\n      <View>\n        <View>\n          <Text>Title:</Text>\n          <TextInput\n            placeholder=\"Title\"\n            value={title}\n            onChangeText={setTitle}\n          ></TextInput>\n        </View>\n        <View>\n          <Text>Author:</Text>\n          <TextInput\n            placeholder=\"Author\"\n            value={author}\n            onChangeText={setAuthor}\n          ></TextInput>\n        </View>\n        <View>\n          <Text>Genre:</Text>\n          <TextInput\n            placeholder=\"Genre\"\n            value={genre}\n            onChangeText={setGenre}\n          ></TextInput>\n        </View>\n        <View>\n          <Text>Other notes:</Text>\n          <TextInput\n            placeholder=\"Personal notes about the book\"\n            value={notes}\n            onChangeText={setNotes}\n          ></TextInput>\n        </View>\n      </View>\n      <Button title=\"Save Changes\" onPress={saveChanges}>\n        Save Changes\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 50,\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: 50,\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}