{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport * as Font from \"expo-font\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button, ButtonGroup, Input } from \"@rneui/base\";\nimport { NavigationContainer, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar starterData = [{\n  title: \"The Poppy War\",\n  author: \"R.F. Kuang\",\n  genre: \"Fantasy\"\n}, {\n  title: \"The Way of Kings\",\n  author: \"Brandon Sanderson\",\n  genre: \"Fantasy\"\n}, {\n  title: \"A Little Life\",\n  author: \"Hanya Yanigahara\",\n  genre: \"Fiction\"\n}, {\n  title: \"Empire of Silence\",\n  author: \"Christopher Ruocchio\",\n  genre: \"Sci-fi\"\n}];\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Collections\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Collections\",\n        component: CollectionsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Books\",\n        component: BooksScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Book Info\",\n        component: BookInfoScreen\n      })]\n    })\n  });\n}\nfunction CollectionsScreen(_ref) {\n  var _route$params;\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedAnswer = _useState2[0],\n    setSelectedAnswer = _useState2[1];\n  var route = useRoute();\n  var questionIndex = ((_route$params = route.params) == null ? void 0 : _route$params.questionIndex) || 0;\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    score = _useState4[0],\n    setScore = _useState4[1];\n  return _jsx(View, {\n    style: [styles.container],\n    children: _jsx(Text, {\n      children: \"this is text in the colelctions screen\"\n    })\n  });\n}\nfunction BooksScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var scoreValue = route.params.score;\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsxs(Text, {\n      children: [\"You got \", scoreValue, \" out of \", questionSet.length, \" correct\"]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Question\", {\n          questionIndex: 0\n        });\n      },\n      children: \"Restart\"\n    })]\n  });\n}\nfunction BookInfoScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  var scoreValue = route.params.score;\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsxs(Text, {\n      children: [\"You got \", scoreValue, \" out of \", questionSet.length, \" correct\"]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Question\", {\n          questionIndex: 0\n        });\n      },\n      children: \"Restart\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"50px\"\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\"\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: \"50px\"\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FontAwesome","Font","useState","useCallback","useEffect","Text","FlatList","Image","Button","ButtonGroup","Input","NavigationContainer","useRoute","createNativeStackNavigator","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Stack","starterData","title","author","genre","App","children","Navigator","initialRouteName","Screen","name","component","CollectionsScreen","BooksScreen","BookInfoScreen","_ref","_route$params","navigation","_useState","_useState2","_slicedToArray","selectedAnswer","setSelectedAnswer","route","questionIndex","params","_useState3","_useState4","score","setScore","style","styles","container","_ref2","scoreValue","questionSet","length","onPress","navigate","_ref3","create","flex","backgroundColor","alignItems","justifyContent","fontSize","image","aspectRatio","width","horizontal","flexDirection","padding","button"],"sources":["C:/Users/firet/Documents/book-tracker/BookTrackerApp/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, View } from \"react-native\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport * as Font from \"expo-font\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport { FlatList, Image } from \"react-native\";\nimport { Button, ButtonGroup, Input } from \"@rneui/base\";\nimport { NavigationContainer, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst Stack = createNativeStackNavigator();\n\nlet starterData = [\n  {\n    title: \"The Poppy War\",\n    author: \"R.F. Kuang\",\n    genre: \"Fantasy\",\n  },\n  {\n    title: \"The Way of Kings\",\n    author: \"Brandon Sanderson\",\n    genre: \"Fantasy\",\n  },\n  {\n    title: \"A Little Life\",\n    author: \"Hanya Yanigahara\",\n    genre: \"Fiction\",\n  },\n  {\n    title: \"Empire of Silence\",\n    author: \"Christopher Ruocchio\",\n    genre: \"Sci-fi\",\n  },\n];\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Collections\">\n        <Stack.Screen name=\"Collections\" component={CollectionsScreen} />\n        <Stack.Screen name=\"Books\" component={BooksScreen} />\n        <Stack.Screen name=\"Book Info\" component={BookInfoScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction CollectionsScreen({ navigation }) {\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const route = useRoute();\n  const questionIndex = route.params?.questionIndex || 0;\n  const [score, setScore] = useState(0);\n\n  return (\n    <View style={[styles.container]}>\n      <Text>this is text in the colelctions screen</Text>\n    </View>\n  );\n}\n\nfunction BooksScreen({ navigation }) {\n  const scoreValue = route.params.score;\n  return (\n    <View style={[styles.container]}>\n      <Text>\n        You got {scoreValue} out of {questionSet.length} correct\n      </Text>\n      <Button\n        onPress={() => navigation.navigate(\"Question\", { questionIndex: 0 })}\n      >\n        Restart\n      </Button>\n    </View>\n  );\n}\n\nfunction BookInfoScreen({ navigation }) {\n  const scoreValue = route.params.score;\n  //show how many questions correct\n\n  return (\n    <View style={[styles.container]}>\n      <Text>\n        You got {scoreValue} out of {questionSet.length} correct\n      </Text>\n      <Button\n        onPress={() => navigation.navigate(\"Question\", { questionIndex: 0 })}\n      >\n        Restart\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"50px\",\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: \"50px\",\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}