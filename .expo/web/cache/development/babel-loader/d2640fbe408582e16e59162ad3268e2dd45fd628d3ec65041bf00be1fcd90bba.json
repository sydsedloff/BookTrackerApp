{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport * as Font from \"expo-font\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button, ButtonGroup, Input } from \"@rneui/base\";\nimport { NavigationContainer, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar favoriteBooks = [{\n  title: \"Babel\",\n  author: \"R.F. Kuang\",\n  genre: \"Fantasy\"\n}, {\n  title: \"The Way of Kings\",\n  author: \"Brandon Sanderson\",\n  genre: \"Fantasy\"\n}, {\n  title: \"A Little Life\",\n  author: \"Hanya Yanigahara\",\n  genre: \"Fiction\"\n}, {\n  title: \"Wisdom of Crowds\",\n  author: \"Joe Abercrombie\",\n  genre: \"Fantasy\"\n}];\nvar excitedToReadBooks = [{\n  title: \"Empire of Silence\",\n  author: \"Christopher Ruocchio\",\n  genre: \"Sci-fi\"\n}, {\n  title: \"Jade City\",\n  author: \"Fonda Lee\",\n  genre: \"Fantasy\"\n}, {\n  title: \"Yellowface\",\n  author: \"R.F Kuang\",\n  genre: \"Fiction\"\n}];\nvar worstBooks = [{\n  title: \"Emma\",\n  author: \"Jane Austen\",\n  genre: \"Classics\"\n}, {\n  title: \"Fight or Flight\",\n  author: \"Samantha Young\",\n  genre: \"Romance\"\n}, {\n  title: \"Hounded\",\n  author: \"Kevin Hearne\",\n  genre: \"Fantasy\"\n}];\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"CollectionsScreen\",\n      children: [_jsx(Stack.Screen, {\n        name: \"CollectionsScreen\",\n        component: CollectionsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"BooksScreen\",\n        component: BooksScreen\n      }), _jsx(Stack.Screen, {\n        name: \"BookInfoScreen\",\n        component: BookInfoScreen\n      })]\n    })\n  });\n}\nvar collections = [{\n  title: \"Favorite Books\",\n  data: favoriteBooks\n}, {\n  title: \"Excited to Read\",\n  data: excitedToReadBooks\n}, {\n  title: \"Worst Books\",\n  data: worstBooks\n}];\nfunction CollectionsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var handlePress = function handlePress(collection) {\n    navigation.navigate(\"BooksScreen\", {\n      collection: collection\n    });\n  };\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: collections,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handlePress(item);\n          },\n          children: _jsx(View, {\n            children: _jsx(Text, {\n              children: item.title\n            })\n          })\n        });\n      }\n    })\n  });\n}\nfunction BooksScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    route = _ref3.route;\n  var collection = route.params;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    books = _useState2[0],\n    setVisibleBooks = _useState2[1];\n  useEffect(function () {\n    switch (collection.title) {\n      case \"Favorite Books\":\n        setBooks(favoriteBooks);\n        break;\n      case \"Excited to Read\":\n        setBooks(excitedToReadBooks);\n        break;\n      case \"Worst Books\":\n        setBooks(worstBooks);\n        break;\n      default:\n        setBooks([]);\n        break;\n    }\n  }, [collection]);\n  function handlePress(book) {\n    navigation.navigate(\"BookInfoScreen\", {\n      book: book\n    });\n  }\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: books,\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsxs(View, {\n          children: [_jsx(Text, {\n            children: item.title\n          }), _jsxs(Text, {\n            children: [\"by \", item.author]\n          })]\n        });\n      }\n    })\n  });\n}\nfunction BookInfoScreen(_ref5) {\n  var navigation = _ref5.navigation;\n  var scoreValue = route.params.score;\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsxs(Text, {\n      children: [\"You got \", scoreValue, \" out of \", questionSet.length, \" correct\"]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Question\", {\n          questionIndex: 0\n        });\n      },\n      children: \"Restart\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"50px\"\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\"\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: \"50px\"\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","TouchableOpacity","View","FontAwesome","Font","useState","useCallback","useEffect","Text","FlatList","Image","Button","ButtonGroup","Input","NavigationContainer","useRoute","createNativeStackNavigator","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Stack","favoriteBooks","title","author","genre","excitedToReadBooks","worstBooks","App","children","Navigator","initialRouteName","Screen","name","component","CollectionsScreen","BooksScreen","BookInfoScreen","collections","data","_ref","navigation","handlePress","collection","navigate","renderItem","_ref2","item","onPress","_ref3","route","params","_useState","_useState2","_slicedToArray","books","setVisibleBooks","setBooks","book","_ref4","_ref5","scoreValue","score","style","styles","container","questionSet","length","questionIndex","create","flex","backgroundColor","alignItems","justifyContent","fontSize","image","aspectRatio","width","horizontal","flexDirection","padding","button"],"sources":["C:/Users/firet/Documents/book-tracker/BookTrackerApp/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport * as Font from \"expo-font\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Text } from \"@rneui/themed\";\nimport { FlatList, Image } from \"react-native\";\nimport { Button, ButtonGroup, Input } from \"@rneui/base\";\nimport { NavigationContainer, useRoute } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst Stack = createNativeStackNavigator();\n\nlet favoriteBooks = [\n  {\n    title: \"Babel\",\n    author: \"R.F. Kuang\",\n    genre: \"Fantasy\",\n  },\n  {\n    title: \"The Way of Kings\",\n    author: \"Brandon Sanderson\",\n    genre: \"Fantasy\",\n  },\n  {\n    title: \"A Little Life\",\n    author: \"Hanya Yanigahara\",\n    genre: \"Fiction\",\n  },\n  {\n    title: \"Wisdom of Crowds\",\n    author: \"Joe Abercrombie\",\n    genre: \"Fantasy\",\n  },\n];\n\nconst excitedToReadBooks = [\n  {\n    title: \"Empire of Silence\",\n    author: \"Christopher Ruocchio\",\n    genre: \"Sci-fi\",\n  },\n  {\n    title: \"Jade City\",\n    author: \"Fonda Lee\",\n    genre: \"Fantasy\",\n  },\n  {\n    title: \"Yellowface\",\n    author: \"R.F Kuang\",\n    genre: \"Fiction\",\n  },\n];\n\nconst worstBooks = [\n  {\n    title: \"Emma\",\n    author: \"Jane Austen\",\n    genre: \"Classics\",\n  },\n  {\n    title: \"Fight or Flight\",\n    author: \"Samantha Young\",\n    genre: \"Romance\",\n  },\n  {\n    title: \"Hounded\",\n    author: \"Kevin Hearne\",\n    genre: \"Fantasy\",\n  },\n];\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"CollectionsScreen\">\n        <Stack.Screen name=\"CollectionsScreen\" component={CollectionsScreen} />\n        <Stack.Screen name=\"BooksScreen\" component={BooksScreen} />\n        <Stack.Screen name=\"BookInfoScreen\" component={BookInfoScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst collections = [\n  {\n    title: \"Favorite Books\",\n    data: favoriteBooks,\n  },\n  {\n    title: \"Excited to Read\",\n    data: excitedToReadBooks,\n  },\n  {\n    title: \"Worst Books\",\n    data: worstBooks,\n  },\n];\n\n//show all collections\nfunction CollectionsScreen({ navigation }) {\n  const handlePress = (collection) => {\n    navigation.navigate(\"BooksScreen\", { collection });\n  };\n  return (\n    <View>\n      <FlatList\n        data={collections}\n        renderItem={({ item }) => (\n          <TouchableOpacity onPress={() => handlePress(item)}>\n            <View>\n              <Text>{item.title}</Text>\n            </View>\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n}\n\n//books in each collection\nfunction BooksScreen({ navigation, route }) {\n  const collection = route.params;\n  const [books, setVisibleBooks] = useState([]);\n  useEffect(() => {\n    // show books based on collection\n    switch (collection.title) {\n      case \"Favorite Books\":\n        setBooks(favoriteBooks);\n        break;\n      case \"Excited to Read\":\n        setBooks(excitedToReadBooks);\n        break;\n      case \"Worst Books\":\n        setBooks(worstBooks);\n        break;\n      default:\n        setBooks([]);\n        break;\n    }\n  }, [collection]);\n  function handlePress(book) {\n    navigation.navigate(\"BookInfoScreen\", { book });\n  }\n  return (\n    <View>\n      <FlatList\n        data={books}\n        renderItem={({ item }) => (\n          <View>\n            <Text>{item.title}</Text>\n            <Text>by {item.author}</Text>\n          </View>\n        )}\n      />\n    </View>\n  );\n}\n\nfunction BookInfoScreen({ navigation }) {\n  const scoreValue = route.params.score;\n  //show how many questions correct\n\n  return (\n    <View style={[styles.container]}>\n      <Text>\n        You got {scoreValue} out of {questionSet.length} correct\n      </Text>\n      <Button\n        onPress={() => navigation.navigate(\"Question\", { questionIndex: 0 })}\n      >\n        Restart\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"50px\",\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: \"50%\",\n    backgroundColor: \"blue\",\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10,\n    fontSize: \"50px\",\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE5C,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,SAASC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACxD,SAASC,IAAI,QAAQ,eAAe;AAAC,OAAAC,QAAA;AAAA,OAAAC,KAAA;AAErC,SAASC,MAAM,EAAEC,WAAW,EAAEC,KAAK,QAAQ,aAAa;AACxD,SAASC,mBAAmB,EAAEC,QAAQ,QAAQ,0BAA0B;AACxE,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErE,IAAMC,KAAK,GAAGN,0BAA0B,EAAE;AAE1C,IAAIO,aAAa,GAAG,CAClB;EACEC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,YAAY;EACpBC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAE,mBAAmB;EAC3BC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAE,kBAAkB;EAC1BC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAE,iBAAiB;EACzBC,KAAK,EAAE;AACT,CAAC,CACF;AAED,IAAMC,kBAAkB,GAAG,CACzB;EACEH,KAAK,EAAE,mBAAmB;EAC1BC,MAAM,EAAE,sBAAsB;EAC9BC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,WAAW;EAClBC,MAAM,EAAE,WAAW;EACnBC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE,WAAW;EACnBC,KAAK,EAAE;AACT,CAAC,CACF;AAED,IAAME,UAAU,GAAG,CACjB;EACEJ,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,aAAa;EACrBC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,iBAAiB;EACxBC,MAAM,EAAE,gBAAgB;EACxBC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,SAAS;EAChBC,MAAM,EAAE,cAAc;EACtBC,KAAK,EAAE;AACT,CAAC,CACF;AAED,eAAe,SAASG,GAAGA,CAAA,EAAG;EAC5B,OACEV,IAAA,CAACL,mBAAmB;IAAAgB,QAAA,EAClBT,KAAA,CAACC,KAAK,CAACS,SAAS;MAACC,gBAAgB,EAAC,mBAAmB;MAAAF,QAAA,GACnDX,IAAA,CAACG,KAAK,CAACW,MAAM;QAACC,IAAI,EAAC,mBAAmB;QAACC,SAAS,EAAEC;MAAkB,EAAG,EACvEjB,IAAA,CAACG,KAAK,CAACW,MAAM;QAACC,IAAI,EAAC,aAAa;QAACC,SAAS,EAAEE;MAAY,EAAG,EAC3DlB,IAAA,CAACG,KAAK,CAACW,MAAM;QAACC,IAAI,EAAC,gBAAgB;QAACC,SAAS,EAAEG;MAAe,EAAG;IAAA;EACjD,EACE;AAE1B;AAEA,IAAMC,WAAW,GAAG,CAClB;EACEf,KAAK,EAAE,gBAAgB;EACvBgB,IAAI,EAAEjB;AACR,CAAC,EACD;EACEC,KAAK,EAAE,iBAAiB;EACxBgB,IAAI,EAAEb;AACR,CAAC,EACD;EACEH,KAAK,EAAE,aAAa;EACpBgB,IAAI,EAAEZ;AACR,CAAC,CACF;AAGD,SAASQ,iBAAiBA,CAAAK,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACrC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,UAAU,EAAK;IAClCF,UAAU,CAACG,QAAQ,CAAC,aAAa,EAAE;MAAED,UAAU,EAAVA;IAAW,CAAC,CAAC;EACpD,CAAC;EACD,OACEzB,IAAA,CAACjB,IAAI;IAAA4B,QAAA,EACHX,IAAA,CAACV,QAAQ;MACP+B,IAAI,EAAED,WAAY;MAClBO,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QAAA,OACjB7B,IAAA,CAAClB,gBAAgB;UAACgD,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMN,WAAW,CAACK,IAAI,CAAC;UAAA,CAAC;UAAAlB,QAAA,EACjDX,IAAA,CAACjB,IAAI;YAAA4B,QAAA,EACHX,IAAA,CAACX,IAAI;cAAAsB,QAAA,EAAEkB,IAAI,CAACxB;YAAK;UAAQ;QACpB,EACU;MAAA;IACnB;EACF,EACG;AAEX;AAGA,SAASa,WAAWA,CAAAa,KAAA,EAAwB;EAAA,IAArBR,UAAU,GAAAQ,KAAA,CAAVR,UAAU;IAAES,KAAK,GAAAD,KAAA,CAALC,KAAK;EACtC,IAAMP,UAAU,GAAGO,KAAK,CAACC,MAAM;EAC/B,IAAAC,SAAA,GAAiChD,QAAQ,CAAC,EAAE,CAAC;IAAAiD,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,KAAK,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAC7B/C,SAAS,CAAC,YAAM;IAEd,QAAQqC,UAAU,CAACpB,KAAK;MACtB,KAAK,gBAAgB;QACnBkC,QAAQ,CAACnC,aAAa,CAAC;QACvB;MACF,KAAK,iBAAiB;QACpBmC,QAAQ,CAAC/B,kBAAkB,CAAC;QAC5B;MACF,KAAK,aAAa;QAChB+B,QAAQ,CAAC9B,UAAU,CAAC;QACpB;MACF;QACE8B,QAAQ,CAAC,EAAE,CAAC;QACZ;IAAM;EAEZ,CAAC,EAAE,CAACd,UAAU,CAAC,CAAC;EAChB,SAASD,WAAWA,CAACgB,IAAI,EAAE;IACzBjB,UAAU,CAACG,QAAQ,CAAC,gBAAgB,EAAE;MAAEc,IAAI,EAAJA;IAAK,CAAC,CAAC;EACjD;EACA,OACExC,IAAA,CAACjB,IAAI;IAAA4B,QAAA,EACHX,IAAA,CAACV,QAAQ;MACP+B,IAAI,EAAEgB,KAAM;MACZV,UAAU,EAAE,SAAAA,WAAAc,KAAA;QAAA,IAAGZ,IAAI,GAAAY,KAAA,CAAJZ,IAAI;QAAA,OACjB3B,KAAA,CAACnB,IAAI;UAAA4B,QAAA,GACHX,IAAA,CAACX,IAAI;YAAAsB,QAAA,EAAEkB,IAAI,CAACxB;UAAK,EAAQ,EACzBH,KAAA,CAACb,IAAI;YAAAsB,QAAA,GAAC,KAAG,EAACkB,IAAI,CAACvB,MAAM;UAAA,EAAQ;QAAA,EACxB;MAAA;IACP;EACF,EACG;AAEX;AAEA,SAASa,cAAcA,CAAAuB,KAAA,EAAiB;EAAA,IAAdnB,UAAU,GAAAmB,KAAA,CAAVnB,UAAU;EAClC,IAAMoB,UAAU,GAAGX,KAAK,CAACC,MAAM,CAACW,KAAK;EAGrC,OACE1C,KAAA,CAACnB,IAAI;IAAC8D,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,CAAE;IAAApC,QAAA,GAC9BT,KAAA,CAACb,IAAI;MAAAsB,QAAA,GAAC,UACI,EAACgC,UAAU,EAAC,UAAQ,EAACK,WAAW,CAACC,MAAM,EAAC,UAClD;IAAA,EAAO,EACPjD,IAAA,CAACR,MAAM;MACLsC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMP,UAAU,CAACG,QAAQ,CAAC,UAAU,EAAE;UAAEwB,aAAa,EAAE;QAAE,CAAC,CAAC;MAAA,CAAC;MAAAvC,QAAA,EACtE;IAED,EAAS;EAAA,EACJ;AAEX;AAEA,IAAMmC,MAAM,GAAGjE,UAAU,CAACsE,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,QAAQ,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE;IACLL,IAAI,EAAE,CAAC;IACPM,WAAW,EAAE,CAAC;IACdC,KAAK,EAAE,KAAK;IACZN,eAAe,EAAE;EACnB,CAAC;EACDO,UAAU,EAAE;IACVC,aAAa,EAAE,KAAK;IACpBN,cAAc,EAAE,cAAc;IAC9BO,OAAO,EAAE,EAAE;IACXN,QAAQ,EAAE;EACZ,CAAC;EACDO,MAAM,EAAE;IACNT,UAAU,EAAE,QAAQ;IACpBD,eAAe,EAAE,SAAS;IAC1BS,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}